SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

CREATE TABLE public.app_users
(
    id       bigint  NOT NULL,
    version  integer NOT NULL,
    password character varying(60),
    username character varying(30)
);


ALTER TABLE public.app_users OWNER TO postgres;

ALTER TABLE public.app_users ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.app_users_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE public.project_features
(
    project_id bigint NOT NULL,
    features   character varying(255)
);


ALTER TABLE public.project_features OWNER TO postgres;

CREATE TABLE public.project_files
(
    project_id       bigint NOT NULL,
    file_name        character varying(255),
    stored_file_name character varying(255)
);


ALTER TABLE public.project_files OWNER TO postgres;

CREATE TABLE public.project_git_links
(
    project_id bigint                 NOT NULL,
    label      character varying(60)  NOT NULL,
    link       character varying(500) NOT NULL
);


ALTER TABLE public.project_git_links OWNER TO postgres;

CREATE TABLE public.projects
(
    id               bigint                 NOT NULL,
    version          integer                NOT NULL,
    category         character varying(255) NOT NULL,
    file_name        character varying(255),
    stored_file_name character varying(255),
    demo_link        character varying(500),
    git_link         character varying(500),
    id_video         character varying(11),
    start_date       date,
    status           character varying(255) NOT NULL,
    summary          character varying(550) NOT NULL,
    title            character varying(100) NOT NULL,
    CONSTRAINT projects_category_check CHECK (((category)::text = ANY ((ARRAY['PERSONAL_PROJECT':: character varying, 'PROFESSIONAL_PROJECT':: character varying])::text[])
) ),
    CONSTRAINT projects_status_check CHECK (((status)::text = ANY ((ARRAY['IN_PROGRESS'::character varying, 'MAINTAINED'::character varying, 'ARCHIVED'::character varying, 'CANCELLED'::character varying])::text[])))
);


ALTER TABLE public.projects OWNER TO postgres;

ALTER TABLE public.projects ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.projects_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE public.projects_tags
(
    fk_project_id bigint NOT NULL,
    fk_tag_id     bigint NOT NULL
);

ALTER TABLE public.projects_tags OWNER TO postgres;

CREATE TABLE public.settings
(
    setting_key   character varying(50)  NOT NULL,
    is_protected  boolean                NOT NULL,
    setting_value character varying(255) NOT NULL,
    version       integer                NOT NULL
);


ALTER TABLE public.settings OWNER TO postgres;

CREATE TABLE public.tag_types
(
    id                     bigint                NOT NULL,
    version                integer               NOT NULL,
    background_color_dark  character varying(7)  NOT NULL,
    background_color_light character varying(7)  NOT NULL,
    name                   character varying(40) NOT NULL,
    text_color_dark        character varying(7)  NOT NULL,
    text_color_light       character varying(7)  NOT NULL
);


ALTER TABLE public.tag_types OWNER TO postgres;

ALTER TABLE public.tag_types ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.tag_types_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE public.tags
(
    id          bigint                NOT NULL,
    version     integer               NOT NULL,
    name        character varying(40) NOT NULL,
    tag_type_id bigint                NOT NULL
);

ALTER TABLE public.tags OWNER TO postgres;

ALTER TABLE public.tags ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.tags_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE public.user_roles
(
    user_id bigint NOT NULL,
    roles   character varying(255)
);

ALTER TABLE public.user_roles OWNER TO postgres;

ALTER TABLE ONLY public.app_users
    ADD CONSTRAINT app_users_pkey PRIMARY KEY (id);

ALTER TABLE ONLY public.projects
    ADD CONSTRAINT projects_pkey PRIMARY KEY (id);

ALTER TABLE ONLY public.settings
    ADD CONSTRAINT settings_pkey PRIMARY KEY (setting_key);

ALTER TABLE ONLY public.tag_types
    ADD CONSTRAINT tag_types_pkey PRIMARY KEY (id);

ALTER TABLE ONLY public.tags
    ADD CONSTRAINT tags_pkey PRIMARY KEY (id);

ALTER TABLE ONLY public.tag_types
    ADD CONSTRAINT uk94rcrvkaxqi6dwnqc05ggwxey UNIQUE (name);

ALTER TABLE ONLY public.project_git_links
    ADD CONSTRAINT ukfd55u8yspd141scmaflygy1dk UNIQUE (label);

ALTER TABLE ONLY public.app_users
    ADD CONSTRAINT ukspsnwr241e9k9c8p5xl4k45ih UNIQUE (username);

ALTER TABLE ONLY public.tags
    ADD CONSTRAINT ukt48xdq560gs3gap9g7jg36kgc UNIQUE (name);

ALTER TABLE ONLY public.projects
    ADD CONSTRAINT uktjhqwalyna982dhwdnx5ksuwv UNIQUE (title);

ALTER TABLE ONLY public.project_files
    ADD CONSTRAINT files_project_fk FOREIGN KEY (project_id) REFERENCES public.projects(id);

ALTER TABLE ONLY public.project_features
    ADD CONSTRAINT fk58okhnl0y399a1gl4kmgl44xt FOREIGN KEY (project_id) REFERENCES public.projects(id);

ALTER TABLE ONLY public.project_git_links
    ADD CONSTRAINT fk_git_links_project FOREIGN KEY (project_id) REFERENCES public.projects(id);

ALTER TABLE ONLY public.user_roles
    ADD CONSTRAINT fkaf154i5th4vvgbahf8b8pa688 FOREIGN KEY (user_id) REFERENCES public.app_users(id);

ALTER TABLE ONLY public.projects_tags
    ADD CONSTRAINT fkikhr1b9sb19j8u3bo7br99yre FOREIGN KEY (fk_project_id) REFERENCES public.projects(id);

ALTER TABLE ONLY public.tags
    ADD CONSTRAINT fkiw9yusf4yv2v7t0qbpd02qtra FOREIGN KEY (tag_type_id) REFERENCES public.tag_types(id);

ALTER TABLE ONLY public.projects_tags
    ADD CONSTRAINT fkmb5mgbynhbaiqapmf4mj4dbpe FOREIGN KEY (fk_tag_id) REFERENCES public.tags(id);